float rotated = 0.0;
float speed = 1;
PShape ship;
float positionX = 200;
float positionY = 200;
boolean sUP=false,sDOWN=false,sRIGHT=false,sLEFT=false;
float dX, dY;
ArrayList shots = new ArrayList();
ArrayList<Missile> missiles;


void setup() {
  size(400,400);
  
  ship = createShape();
  ship.beginShape();
  ship.fill(0);
  ship.stroke(255);
  ship.strokeWeight(1);
  ship.vertex(15,0);
  ship.vertex(0,30);
  ship.vertex(15,20);
  ship.vertex(30,30);
  //ship.translate(-15,-15);
  ship.endShape(CLOSE);
  
  missiles = new ArrayList<Missile>();
}

void keyPressed() {
  if (key == CODED) {
    if (keyCode == UP) {
      sUP=true;
    }
    if (keyCode == DOWN) {
      sDOWN=true;
    } 
    if (keyCode == RIGHT) {
      sRIGHT=true;
    }
    if (keyCode == LEFT) {
      sLEFT=true;
    }
  }
  if (key == ' ') {
    //fire a shot
    //create missile
    //add it to the array
    //Make it travel
    missiles.add(new Missile(-ship.width/2, ship.height/2, rotated));   //Adds a missile to the arraylist missiles. 0,-10 makes them appear from the point of the ship. Rotated is the angle they are supposed to fire.
    
  }
}

void missleCollisionDetection() {
      for (int i = 0; i<missiles.size(); i++) {
        Missile m = missiles.get(i);
        stroke(255);
        point(m.x, m.y);
        if (dist(m.x, m.y, 100, 100)<=100/2) {
          fill(0, 255, 0);
          ellipse(100, 100, 100, 100);
        }
      }
  }

void moveShip(){
  
  //this function should update if keys are pressed down 
     // - this creates smooth movement
  //update rotation,speed and update current location
  //you should also check to make sure your ship is not outside of the window
  if(sUP){
    dX = cos(rotated+radians(270))*3;  //Change the *2 depending on movement of the ship. Higher = faster.
    dY = sin(rotated+radians(270))*3;  //+radians(270) to make sure the ship is facing upwards/moves in the right direction
    positionX += dX;
    positionY += dY;
     
  }
  if(sDOWN){
    positionX -= cos(rotated+radians(270))*3;
    positionY -= sin(rotated+radians(270))*3;
  }
  if(sRIGHT){
    rotated+=0.05;
  }
  if(sLEFT){
    rotated-=0.05;
  }
}

void keyReleased() {
  if (key == CODED) {
    if (keyCode == UP) {
      sUP=false;
    }
    if (keyCode == DOWN) {
      sDOWN=false;
    } 
    if (keyCode == RIGHT) {
      sRIGHT=false;
    }
    if (keyCode == LEFT) {
      sLEFT=false;
    }
  }
}

void draw() {
  
  background(0);
  fill(255,0,0);
  translate(positionX, positionY); // Moves origin to the centre of the screen.
  ellipse(100,100,100,100);
  draw_missiles();
  missleCollisionDetection();
  pushMatrix();
  
  rotate(rotated);
  shape(ship,-ship.width/2,-ship.height/2); //Makes the ship at the centre of the screen.
  
  if(rotated >=TWO_PI) rotated = 0;
  if(rotated<0) rotated = TWO_PI;
  
  moveShip();
  popMatrix();
  //translate(positionX, positionY);
  
}

class Missile {
  float x,y,angle;
  
  Missile(float xpos, float ypos, float a) {
    x = xpos;
    y = ypos;
    angle = a;
  }
}

void draw_missiles() {
  for(int i = 0; i<missiles.size(); i++) {
    Missile m = missiles.get(i);
    stroke(255);
    point(m.x, m.y);
    m.x += cos(m.angle+radians(270))*5;  // Issues: bullets move when rotating the ship. When the ship is rotated slightly the bullets fire in weird directions.
    m.y += sin(m.angle+radians(270))*5;
    //if(m.x > width || m.x < 0 || m.y > height || m.y < 0) {    This is not currently working. Shots don't appear.
    //  missiles.remove(m);
    //}
  }
}
